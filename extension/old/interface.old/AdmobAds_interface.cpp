/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"

#include "AdmobAds.h"

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*InitAds_t)(const char* pub_id);
typedef  s3eResult(*ShowAds_t)();
typedef  s3eResult(*HideAds_t)();

/**
 * struct that gets filled in by AdmobAdsRegister
 */
typedef struct AdmobAdsFuncs
{
    InitAds_t m_InitAds;
    ShowAds_t m_ShowAds;
    HideAds_t m_HideAds;
} AdmobAdsFuncs;

static AdmobAdsFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x18b70240, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE, "error loading extension: AdmobAds");
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x18b70240, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool AdmobAdsAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult InitAds(const char* pub_id)
{
    IwTrace(ADMOBADS_VERBOSE, ("calling AdmobAds[0] func: InitAds"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_InitAds(pub_id);
}

s3eResult ShowAds()
{
    IwTrace(ADMOBADS_VERBOSE, ("calling AdmobAds[1] func: ShowAds"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_ShowAds();
}

s3eResult HideAds()
{
    IwTrace(ADMOBADS_VERBOSE, ("calling AdmobAds[2] func: HideAds"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_HideAds();
}
